name: build

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
        dotnet: [ '2.2.103', '3.0.100' ]

    steps:
      - name: Setup .NET Core if needed
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet }}
        if: (matrix.os == 'macOS-latest' || matrix.os == 'ubuntu-latest') || (matrix.dotnet == '2.2.103')
      - name: Checkout
        uses: actions/checkout@v1
      - name: Build with dotnet for .NET CORE 2
        run: dotnet build ./src/ZNetCS.AspNetCore.IPFiltering/ZNetCS.AspNetCore.IPFiltering.csproj --configuration Release --framework netstandard2.0
      - name: Build with dotnet for .NET CORE 3
        run: dotnet build ./src/ZNetCS.AspNetCore.IPFiltering/ZNetCS.AspNetCore.IPFiltering.csproj --configuration Release --framework netcoreapp3.0
        if: (matrix.dotnet != '2.2.103')
      - name: Build with dotnet for .NET FRAMEWORK
        run: dotnet build ./src/ZNetCS.AspNetCore.IPFiltering/ZNetCS.AspNetCore.IPFiltering.csproj --configuration Release --framework net461
        if: (matrix.os == 'windows-latest')
      - name: Test with dotnet for .NET CORE 2
        run: dotnet test ./test/ZNetCS.AspNetCore.IPFilteringTest/ZNetCS.AspNetCore.IPFilteringTest.csproj --framework netcoreapp2.2
        if: (matrix.dotnet == '2.2.103')        
      - name: Test with dotnet for .NET CORE 3
        run: dotnet test ./test/ZNetCS.AspNetCore.IPFilteringTest/ZNetCS.AspNetCore.IPFilteringTest.csproj --framework netcoreapp3.0
        if: (matrix.dotnet != '2.2.103')
      - name: Test with dotnet for .NET FRAMEWORK
        run: dotnet test ./test/ZNetCS.AspNetCore.IPFilteringTest/ZNetCS.AspNetCore.IPFilteringTest.csproj --framework net461
        if: (matrix.os == 'windows-latest')
